유효성 검증(form validation)
- 사용자가 입력한 데이터에 대해서 사전 검증하는 작업
- 입력값을 받는 컨트롤러 단에서 처리
- 자주 사용하는 유효성에 대한 검사를 도와주는 프레임워크(hibernate validation) 사용 => 어노테이션을 통해 검증

- 어노테이션 종류
1) @NotBlank : @NotEmpty + 빈 문자열("") 검사
2) @NotEmpty : 길이 0인지 검사(공백허용 => 사용자사 공백으로 문자를 채우면 검증 불가)
3) @NotNull : Null 체크
4) @Length(min = 2, max = 5) : 입력 문자 길이 제한
5) @Email : 이메일 형식에 맞는지 검사(이메일을 입력해야 검사해줌)
6) @Min / @Max : 지정한 값보다 작은지 큰지 검사
7) @Pattern : 정규식을 통한 조건
    [a-z]+




	<dependency>
    <groupId>org.modelmapper</groupId>
    <artifactId>modelmapper</artifactId>
    <version>3.2.2</version>
</dependency>
<dependency>
    <groupId>nz.net.ultraq.thymeleaf</groupId>
    <artifactId>thymeleaf-layout-dialect</artifactId>
    <version>3.4.0</version>
</dependency>

4.modelmapper 사용을 위해 config 파일 작성
5. BaseEntity 작성
6. main 클래스 위에 @EnableJpaAuditing 추가

--------------------------------------------------------

ToDo
- todo 작성
- todo 완료여부
- 전체 todo 목록 보기(완료 안한 목록)
- todo 삭제
- 완료한 todo 목록 보기

ToDo 테이블
- 내용, 작성일, 수정일, 완료여부(true, false), 중요도(true, false)